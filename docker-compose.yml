version: "3.8"

services:
  mysqldb:
    image: mysql:8.0.28
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_DATABASE: tenant_test
    ports:
      - "3306:3306"
    networks:
      services-net:
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  flyway:
    image: flyway/flyway
    command: -url=jdbc:mysql://mysqldb?allowPublicKeyRetrieval=true&useSSL=false -schemas=tenant_test -user=admin -password=admin -connectRetries=60 migrate
    volumes:
      - ./flyway/migration:/flyway/sql
    depends_on:
      mysqldb:
        condition: service_healthy
      adminer:
        condition: service_started
    networks:
      services-net:
    restart: always

  authors:
    container_name: authors
    build:
      context: ./authors
      dockerfile: Dockerfile
    ports:
      - "8081:9996"
    environment:
      MYSQL_HOST: mysqldb
    depends_on:
      mysqldb:
        condition: service_healthy
      adminer:
        condition: service_started
      flyway:
        condition: service_started
    networks:
      services-net:
    restart: always
    
  gateway:
    container_name: te-gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8082:9997"
    environment:
      - GATEWAY_SERVICE_PORT=9997
      - USER_SERVICE_HOST=http://users
      - USER_SERVICE_PORT=9999
      - USERS_ADMIN_ROLE_NAME=admin
      - USERS_ADMIN_ROLE_PASSWORD=admin
      - MOVIE_SERVICE_HOST=http://movies
      - MOVIE_SERVICE_PORT=9998
      - MOVIES_ADMIN_ROLE_NAME=admin
      - MOVIES_ADMIN_ROLE_PASSWORD=admin
      - AUTHOR_SERVICE_HOST=http://authors
      - AUTHOR_SERVICE_PORT=9996
      - AUTHORS_ADMIN_ROLE_NAME=admin
      - AUTHORS_ADMIN_ROLE_PASSWORD=admin
    depends_on:
      mysqldb:
        condition: service_healthy
      adminer:
        condition: service_started
      flyway:
        condition: service_started
    networks:
      services-net:
    restart: always

  movies:
    container_name: movies
    build:
      context: ./movies
      dockerfile: Dockerfile
    ports:
      - "8083:9998"
    environment:
      MYSQL_HOST: mysqldb
      MOVIES_ADMIN_ROLE_NAME: admin
      MOVIES_ADMIN_ROLE_PASSWORD: admin
    depends_on:
      mysqldb:
        condition: service_healthy
      adminer:
        condition: service_started
      flyway:
        condition: service_started
    networks:
      services-net:
    restart: always

  users:
    container_name: te-users
    build:
      context: ./users
      dockerfile: Dockerfile
    ports:
      - "8084:9999"
    environment:
      MYSQL_HOST: mysqldb
      USERS_ADMIN_ROLE_NAME: admin
      USERS_ADMIN_ROLE_PASSWORD: admin
    depends_on:
      mysqldb:
        condition: service_healthy
      adminer:
        condition: service_started
      flyway:
        condition: service_started
    networks:
      services-net:
    restart: always

  adminer:
    image: adminer
    ports:
      - "8000:8080"
    networks:
      services-net:
    restart: always

networks:
  services-net:
